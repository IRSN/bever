[{"path":[]},{"path":"https://irsn.github.io/bever/TODO.html","id":"structure","dir":"","previous_headings":"","what":"Structure","title":"TODO list for the bever package","text":"Change roxygen2 documentation order generate NAMESPACE file suitable fields.","code":""},{"path":[]},{"path":"https://irsn.github.io/bever/articles/User.html","id":"goals","dir":"Articles","previous_headings":"Introduction","what":"Goals","title":"The bever Package User Guide","text":"package bever devoted Extreme-Value models considered Bayesian perspective. depends potomax package consider models frequentist perspective emphasis Maximum-Likelihood (ML) approach. two perspectives can compared using data producing similar results classical Return-Level plots. bever aims producing graphics diagnostics. Although package contains functions dedicated estimation inference Bayesian models, results can also produced using Markov Chain Monte-Carlo different R packages even using sampling engine JAGS stan. bever essentially retain MCMC iterates.","code":""},{"path":"https://irsn.github.io/bever/articles/User.html","id":"extreme-value-models","dir":"Articles","previous_headings":"Introduction","what":"Extreme-Value Models","title":"The bever Package User Guide","text":"package focuses four types Extreme-Value models, conveniently represented acronym (abbreviated names) follows. \"GEV\" GEV model Block Maxima. parameters : \\(\\mu^\\star\\) (location), \\(\\sigma^\\star\\) (scale) \\(\\xi^\\star\\) (shape). blocks assumed constant known duration. \"OS\" models \\(r\\)-largest order statistics blocks. parameters GEV parameters \\(\\mu^\\star\\), \\(\\sigma^\\star\\), \\(\\xi^\\star\\) block maxima, reference constant block duration. \"PP\" Point-Process model Peaks Threshold (POT). parameters GEV parameters \\(\\mu^\\star\\), \\(\\sigma^\\star\\), \\(\\xi^\\star\\) reference block duration. model fitted using observations exceeding given high threshold \\(u\\). parameters depend \\(u\\) support distribution includes values \\(<u\\). \"poisGP\" Poisson-GP model POT. model describes observations exceeding given high threshold \\(u\\). parameters : rate \\(\\lambda\\) Poisson process exceedances two parameters: \\(\\sigma\\) (scale) \\(\\xi\\) (shape) Generalised Pareto (GP) distribution excesses given threshold. first stage least, functions methods devoted priority \"GEV\" \"poisGP\" models. acronyms used package case-insensitive, \"pp\" \"PP\" can indifferently used Point-Process model 3. model types consistent revbayes, although \"poisGP\" (yet) implemented package uses instead binomial-GP model \"binGP\". Speaking “models” somewhat abusive Point-Process Poisson-GP models lead GEV block maxima model aggregated time, Block-Maxima Order Statistics models fully describe extreme observations occurring within blocks. two later models provide data generation process. consider \"GEV\" \"OS\" models derived Poisson-GP process, either \"PP\" \"poisGP\" parameterisation. Indeed, consider \"GEV\" “OS\" models resulting form temporal aggregation POT model implemented Renouv function Renext. major difference \"PP\" \"poisGP\", parameters \"poisGP\" relate threshold \\(u\\), \"PP\" . course, \"PP\" parameter vector \\([\\mu^\\star, \\sigma^\\star, \\xi^\\star]\\) depend threshold \\(u\\), estimate \\([\\widehat{\\mu}^\\star, \\widehat{\\sigma}^\\star, \\widehat{\\xi}^\\star]\\) depend \\(u\\) controls censoring observations. However estimate remains quite stable threshold high enough remains enough data. models vignette considered frequentist Bayesian perspective. second case, inference generally based Markov Chain Monte-Carlo (MCMC).","code":""},{"path":[]},{"path":"https://irsn.github.io/bever/articles/User.html","id":"classical-fitted-model-objects","dir":"Articles","previous_headings":"Introduction > Fitted models as S3 classes","what":"Classical “fitted model” objects","title":"The bever Package User Guide","text":"Following vague terminology making sense least R users, may call fitted models results estimation inference specific couple model data. archetype (fitted) linear model \"lm\" S3 class. common way use specific type model R consists first creating object using corresponding constructor function, data passed formal argument(s). S3 methods plot, summary, coef used. name constructor function often chosen identical name S3 class: object class \"lm\" created using lm function.","code":""},{"path":"https://irsn.github.io/bever/articles/User.html","id":"poor-mans-posteriors","dir":"Articles","previous_headings":"Introduction > Fitted models as S3 classes","what":"“Poor Man’s” Posteriors","title":"The bever Package User Guide","text":"“gentleman’s rules” retained package, cases allow user create fitted models objects using results arising packages, opposed usual fitting data. Bayesian fitted models, allow create matrix MCMC iterates produced packages, possibly relying sampling engines JAGS stan. , user responsible keeping track specific data used, longer automatically duplicated fitted model object. However models defined , minimal set information must given allow use model e.g. derive predictions. Depending type model, involves: block duration, observation duration possibly threshold. following table tells information needed (Y) (N) depending type object created. can call objects created MCMC iterates minimalist poor man’s posteriors. shown later, actually contain little can guessed matrix given MCMC. fitted model principle embed copy information used fit - including data, assumption likely -demanding far interested -products graphics diagnostics. creator functions “poor man’s posteriors” use several optional arguments. current version focuses two EV models: GEV Poisson-GP, provides following objects convention (now) “MCMC” objects names ending 0 suggest impoverishment relative classical object. Note GEV model “MCMC” option available. motivate use Poor Man’s Posterior (PMP), can interested drawing Return-Level plot (RL plot) fitted models, without caring whether historical information used . base ingredient create PMP matrix say MCMC containing MCMC iterates.","code":""},{"path":"https://irsn.github.io/bever/articles/User.html","id":"creating-poor-mans-posteriors","dir":"Articles","previous_headings":"Introduction > Fitted models as S3 classes","what":"Creating Poor Man’s Posteriors","title":"The bever Package User Guide","text":"base ingredient create PMP matrix say MCMC containing MCMC iterates. Except special cases posterior contains independent components, columns MCMC correspond parnames target model. required information pieces model given, see . instance GEV model, matrix MCMC must three columns suitable names; block duration must provided. observation duration required can given. can give observations allow display RL plot. allowed column names c(\"loc\", \"scale\", \"shape\") several packages like evd c(\"mu\", \"sigma\", \"xi\") revdbayes.","code":""},{"path":"https://irsn.github.io/bever/articles/User.html","id":"illustration-gev-model-for-portpirie","dir":"Articles","previous_headings":"Introduction > Fitted models as S3 classes","what":"Illustration: GEV model for portpirie","title":"The bever Package User Guide","text":"Consider first fitting GEV model portpirie data revdbayes. define prior can used \"gev\" model MCMC iterates stored sim_vals element posterior object. Using information , can create Poor Man’s Posterior. object postGEV0 inherits class named \"Bayes0\" containing minimalist Bayesian objects. names suggests, sub-class GEVBayes0 devoted GEV models. Note parameters renamed: revdbayes uses mu, sigma xi, corresponding parameters now named: loc, scale shape better conforms older EV packages. Note also block duration default considered begin 1.0. coef method can used extract estimates parameters. Several estimates can computed MCMC matrix given: posterior mean, median mode (MAP). posterior mode displayed computed better compute maximising posterior function, function can retrieved MCMC iterates. GEVBayes0 function MAP formal argument can used pass MAP vector available. MAP stored GEVBayes0 object can later used e.g. build RL plots. noted using “MAP”, generally name joint mode vector marginal modes. contrast, median coef vector marginal medians, multivariate median. mean difference joint marginal. \\[ \\color{red}{\\text{XXX Maybe change something package Bayes               coef?}} \\] call object postGEV0 minimalist poor man s posterior. actually contains little can guessed matrix given MCMC.","code":"priorGEV1 <- set_prior(prior = \"flatflat\", model = \"gev\") postGEV1 <- rpost_rcpp(n = 10000, model = \"gev\", prior = priorGEV1, data = portpirie) class(postGEV1) ## [1] \"evpost\" head(postGEV1$sim_vals, n = 3) ##            mu     sigma          xi ## [1,] 3.872160 0.1798392 -0.01526768 ## [2,] 3.918301 0.2433903 -0.13266764 ## [3,] 3.860427 0.1995496 -0.03745405 postGEV0 <- GEVBayes0(MCMC = postGEV1$sim_vals) class(postGEV0) ## [1] \"GEVBayes0\" \"Bayes0\" summary(postGEV0) ## GEV Model Bayesian Inference ## o Block duration : 1 ## o Number of blocks used: 0 ## o Number of MCMC iterates: 10000 ## o Posterior mean [sd]: ##            loc          scale          shape  ##  3.874 [0.029]  0.207 [0.022] -0.032 [0.102] coef(postGEV0) ##             loc     scale       shape ## mean   3.874290 0.2067213 -0.03223860 ## median 3.874141 0.2051367 -0.03795394 ## mode         NA        NA          NA vcov(postGEV0) ##                 loc         scale         shape ## loc    0.0008335293  0.0001948684 -0.0009971168 ## scale  0.0001948684  0.0004715341 -0.0006951623 ## shape -0.0009971168 -0.0006951623  0.0103122562"},{"path":"https://irsn.github.io/bever/articles/User.html","id":"illustration-poisson-gp-model-for-the-rainfall-data","dir":"Articles","previous_headings":"Introduction > Fitted models as S3 classes","what":"Illustration: Poisson-GP model for the rainfall data","title":"The bever Package User Guide","text":"creation Poor Man’s Posterior Poisson-GP model bit tedious, mainly model popular existing packages especially revdbayes favours Binomial-GP model. Assuming rate \\(\\lambda\\) GP parameter \\([\\sigma,\\, \\xi]\\) priori independent, remain posteriori independent long ordinary data used. begin retrieving GP part posterior get MCMC iterates rate \\(\\lambda\\) Poisson process exceedances, simply assume conjugate gamma prior used, resulting gamma posterior can easily simulate. Since difficult part posterior “GP” part, poisGPBayes0 function allows use MCMC argument corresponding matrix two columns corresponding MCMC iterates GP parameter. case provide number exceedances using format argument, number needed determine (gamma) posterior. Note estimates GP part exactly based MCMC iterates, estimate rate slightly different longer rely MCMC iterates rather exact marginal posterior \\(\\lambda\\).","code":"data(rainfall) rainfall2 <- rainfall[!is.na(rainfall)] u <- 40  ## threshold (mm) w <- 57  ## obs duration (year) nOT <- sum(rainfall2 > u) nSim <- 10000 priorGP1 <- set_prior(prior = \"flatflat\", model = \"gp\") postGP1 <- rpost_rcpp(n = nSim, model = \"gp\", prior = priorGP1,                       data = rainfall2, thresh = u) class(postGP1) ## [1] \"evpost\" head(postGP1$sim_vals, n = 3) ##       sigma[u]        xi ## [1,]  8.357608 0.2448573 ## [2,] 10.112877 0.2418278 ## [3,]  8.191163 0.1370155 MCMCpoisGP <- cbind(lambda = rgamma(nSim, shape = 1 + nOT, rate = 0 + w),                     postGP1$sim_vals) postGP0 <- poisGPBayes0(MCMC = MCMCpoisGP, threshold = u, effDuration = w)  summary(postGP0) ## poisGP Model Bayesian Inference ## o Number of OT observations: NA ## o Number of MCMC iterates: 10000 ## o Posterior mean [sd]: ##     lambda      scale      shape  ## 1.5 [0.16] 8.0 [1.27] 0.2 [0.13] coef(postGP0) ##          lambda    scale     shape ## mean   1.521839 7.975874 0.1953711 ## median 1.515396 7.900761 0.1802232 ## mode         NA       NA        NA postGP0b <- poisGPBayes0(MCMC = postGP1$sim_vals, threshold = u,                          effDuration = w, nOT = nOT)  summary(postGP0b) ## poisGP Model Bayesian Inference ## o Number of OT observations: 86 ## o Number of MCMC iterates: 10000 ## o Posterior mean [sd]: ##     lambda      scale      shape  ## 1.5 [0.16] 8.0 [1.27] 0.2 [0.13]  ## 'lambda' and the GP parameter are a posteriori independent coef(postGP0b) ##          lambda    scale     shape ## mean   1.526316 7.975874 0.1953711 ## median 1.520472 7.900761 0.1802232 ## mode   1.508772       NA        NA"},{"path":"https://irsn.github.io/bever/articles/User.html","id":"note-on-poor-mans-posteriors-bayes0","dir":"Articles","previous_headings":"Introduction > Fitted models as S3 classes","what":"Note on Poor Man’s Posteriors *Bayes0","title":"The bever Package User Guide","text":"Remind parameters EV models considered bever relate GEV distribution, except Poisson-GP model \\(\\sigma\\) \\(\\xi\\) scale shape parameter Generalised Pareto Distribution. package, use convention parameters GPD GEV distributions named : \"loc\", \"scale\" \"shape\". conforms rule used Renext classical EV packages evd, ismev extRemes. rate Poisson process Poisson-GP model named \"lambda\". , conforms rule used Renext. Since bever package aims “importing” MCMC iterates R packages software tools, strives understand several naming rules. instance parameter names used revdbayes automatically translated names retained . believe strategy unlikely result misinterpretation parameters: seems unlikely GEV shape parameter named \"sigma\" \"mu\". case doubt, user rename columns MCMC matrices. CAUTION now extensive tests made asses possible change order parameters.","code":""},{"path":"https://irsn.github.io/bever/articles/User.html","id":"bayes-frameworks-priors-and-posteriors","dir":"Articles","previous_headings":"","what":"Bayes frameworks: priors and posteriors","title":"The bever Package User Guide","text":"models parameterisations described can used Bayesian framework. details.","code":""},{"path":"https://irsn.github.io/bever/articles/User.html","id":"poisson-gp-framework","dir":"Articles","previous_headings":"Bayes frameworks: priors and posteriors","what":"Poisson-GP framework","title":"The bever Package User Guide","text":"Poisson-GP model, priors can regarded favourable. consider prior based two following assumptions rate \\(\\lambda\\) GP parameter \\([\\sigma, \\, \\xi]\\) priori independent. rate priori Gamma shape \\(a_0>0\\) rate \\(b_0 \\geqslant 0\\). case \\(b_0= 0\\) corresponds improper prior \\(\\pi(\\lambda) \\propto \\lambda^{a_0-1}\\) can make sense least \\(0 < a_0 \\leqslant 1\\). special case \\(a_0 = 1\\) corresponds constant prior density \\(\\lambda\\) .e. improper uniform distribution support \\((0,\\,\\infty[\\). Inasmuch ordinary “OT” observations used, posterior characterised following two properties. rate \\(\\lambda\\) GP parameter \\(\\boldsymbol{\\theta}_{\\text{GP}} := [\\sigma, \\, \\xi]\\) posteriori independent. rate priori Gamma shape \\(a_n = a_0 +n\\) rate \\(b_n = b_0 + w\\) \\(n\\) number exceedances \\(w\\) duration observation period. However kept mind assumptions prior relative threshold \\(u\\): assumptions hold threshold \\(u\\), longer hold threshold \\(u' > u\\). Since threshold \\(u\\) generally known chosen empirically, assumptions prior regarded trick reach computing simplifications theoretically well-founded rule.","code":""},{"path":"https://irsn.github.io/bever/articles/User.html","id":"other-frameworks","dir":"Articles","previous_headings":"Bayes frameworks: priors and posteriors","what":"Other frameworks","title":"The bever Package User Guide","text":"frameworks GEV, rLOS PP priors vector \\([\\mu^\\star,\\,\\sigma^\\star,\\,\\xi^\\star]\\) GEV parameters relation specific block duration \\(w_{\\text{block}}\\), usually taken one year. specific priors available revdbayes package.","code":""},{"path":[]},{"path":[]},{"path":"https://irsn.github.io/bever/articles/User.html","id":"displayed-elements","dir":"Articles","previous_headings":"Return level plots > Classical Return Level plots: frequentist or Bayesian","what":"Displayed elements","title":"The bever Package User Guide","text":"plot uses time period \\(T\\) abscissa quantile ordinate. shown elements can follows. point estimate return level \\(\\rho(T)\\) running period \\(T\\) can displayed curve. frequentist framework, ML estimate \\(\\widehat{\\rho}(T)\\) usually shown. Bayesian framework, mode (MAP), median mean posterior distribution \\(\\rho(T)\\) can used. uncertainty estimates can shown using confidence intervals \\(\\rho(T)\\) frequentist framework, credible intervals \\(\\rho(T)\\) Bayesian framework. Finally can display observations used fit “sample” points. involves use suitable plotting positions. using bever, plot obtained first calling RL method, autoplot method result produced RL. autoplot method produces ggplot graphics object can modified. three graphical elements described correspond layers ggplot object.","code":""},{"path":"https://irsn.github.io/bever/articles/User.html","id":"illustration-for-poisson-gp-fitted-models","dir":"Articles","previous_headings":"Return level plots > Classical Return Level plots: frequentist or Bayesian","what":"Illustration for Poisson-GP fitted models","title":"The bever Package User Guide","text":"Consider first frequentist fit using Garonne data Renext. Since aim profile-likelihood inference return levels rather delta method, use protomax::poisGP function fit frequentist Poisson-GP model  autoplot S3 method produces RL plot ggplot2 graphics. method used class \"poisGP\". Note easy add overwrite annotations, labels, … RL plot similar one obtained Renext confidence intervals obtained profile-likelihood delta method. intervals usually asymmetric, Upper bound usually larger obtained delta method. RL method can used compute return levels frm object class “poisGP”. method returns object inheriting \"data.frame\" class can used autoplot.  Now let use compare frequentist results obtained Bayesian analysis data default Poisson parameter \\(\\lambda\\) GP parameter \\([\\sigma, \\, \\xi]\\) assumed priori independent vague prior: flat gamma prior \\(\\lambda\\) \"flatflat\" prior revdbayes used GP parameter. posterior mode quite close ML estimate. \"poisGP\" class RL method can used Bayesian objects classes \"poisGPBayes\" \"poisGPBayes0\"  Bayesian RL plot quite close frequentist one: modal curve Bayesian RL close quantile estimated ML, Bayesian credible intervals quantiles quite close profile-likelihood confidence interval level (\\(70\\%\\)), although limits Bayesian intervals lower frequentist ones large return periods. course, Bayesian RL plot different informative prior specified. Note \\(x\\)-axis use scale depends type model. GEV model Gumbel scale used theoretical RL curve corresponding Gumbel distribution show straight line. POT models either PP poisGP logarithmic scale used theoretical RL curve corresponding exponential distribution show straight line.","code":"library(bever) y <- Garonne$OTdata$Flow u <- Garonne$OTinfo$threshold w <- Garonne$OTinfo$effDuration gfitML <- potomax::poisGP(data = y, threshold = u, effDuration = w) ## Warning in potomax::poisGP(data = y, threshold = u, effDuration = w): ## 'threshold' is smaller than the smallest observation ## Warning in threshData(threshold = threshold, data, exceed = TRUE, scale = ## scale, : 'threshold' is smaller than the smallest observation ## Warning in threshData(data, threshold = threshold, exceed = FALSE, scale = ## FALSE): 'threshold' is smaller than the smallest observation class(gfitML) ## [1] \"poisGP\" coef(gfitML) ##       lambda        scale        shape  ##    2.3230769 1241.4173797   -0.1362312 confint(gfitML) ## , , 95% ##  ##              L        U ## lambda   1.972    2.714 ## scale  988.964 1538.694 ## shape   -0.209    0.045 autoplot(gfitML) +     ggtitle(\"Fitted Poisson-GP model for \\\"Garonne\\\"\") + theme_gray() gRLML <- RL(gfitML, confintMethod = \"proflik\", trace = 0) class(gRLML) ## [1] \"RL.poisGP\"  \"data.frame\" tail(gRLML, n = 6) ##    Period Level    Quant        L        U ## 14    200   70% 7665.279 7094.007 8654.835 ## 15    250   70% 7783.468 7179.295 8841.809 ## 16    300   70% 7877.404 7245.991 8993.203 ## 17    500   70% 8128.498 7419.502 9410.784 ## 18    700   70% 8284.596 7523.821 9680.573 ## 19   1000   70% 8442.437 7626.501 9962.067 autoplot(gRLML) +     ggtitle(\"Classical RL plot : frequentist POT for Garonne\") + theme_gray() gfitBayes <- poisGPBayes(data = y, threshold = u, effDuration = w) ## Warning in threshData(threshold = threshold, data = pd, exceed = FALSE): ## 'threshold' is smaller than the smallest observation class(gfitBayes) ## [1] \"poisGPBayes\" coef(gfitBayes) ##        lambda    scale      shape ## mode 2.323256 1239.904 -0.1356296 gRLBayes <- RL(gfitBayes, trace = 0) class(gRLBayes) ## [1] \"RL.poisGPBayes\" \"data.frame\" tail(gRLBayes, n = 6) ##    Period Level     Mode   Median     Mean        L        U ## 13    200   70% 7667.248 7895.164 8118.091 6988.039 8535.671 ## 14    250   70% 7785.736 8024.689 8269.425 7067.525 8711.142 ## 15    300   70% 7879.921 8131.957 8391.286 7130.567 8855.038 ## 16    500   70% 8131.734 8407.370 8724.639 7287.893 9237.639 ## 17    700   70% 8288.320 8581.924 8938.135 7380.099 9477.636 ## 18   1000   70% 8446.687 8761.017 9159.594 7470.654 9730.077 autoplot(gRLBayes) +     ggtitle(\"Classical RL plot : Bayesian POT for Garonne\") + theme_gray()"},{"path":"https://irsn.github.io/bever/articles/User.html","id":"illustration-for-gev-models","dir":"Articles","previous_headings":"Return level plots > Classical Return Level plots: frequentist or Bayesian","what":"Illustration for GEV models","title":"The bever Package User Guide","text":"now compare Bayesian frequentist classical RL plots GEV model. Since Bayesian GEV model. use portpirie data provided revdbayes: observations sea levels Port Pirie (AU), metres. frequentist inference results return levels described Chap. 3 Coles’ book (Coles 2001). begin fitting data using ML. aim can use poisGP function potomax package can provide profile-likelihood confidence intervals return levels. Note since consider block maxima portpirie data must coerced list, vector effective durations blocks must provided.  Since Bayesian GEV model available “shelf” revdbayes, use package, create minimal posterior using GEVBayes0 bever. reproduce three lines code used . Note MAP must given named vector suitable names. RL plot obtained follows.  plot can compared one Figure 3.5 Coles’ book (Coles 2001). can seen frequentist Bayesian results quite close , although upper bound confidence credibe intervals differ periods \\(>100\\) years. quite subtle difference Bayesian RL plot bever uses Gumbel scale, NSGEV uses exponential scale. difference mainly region corresponding small return periods \\(T\\), say \\(T< 30\\). Note order display “sample points”, pass vector creating GEVBayes0 object, using yMax argument. created object without giving yMax longer possible show sample points. Similarly, used MAP formal argument, MAP computed GEVBayes0.","code":"fitp <- poisGP(MAX.data = as.list(portpirie),                MAX.effDuration = rep(1, length(portpirie))) autoplot(fitp) + theme_gray() prior <- set_prior(prior = \"flatflat\", model = \"gev\") post <- rpost_rcpp(n = 10000, model = \"gev\", prior = prior, data = portpirie) MAPp <- post$f_mode names(MAPp) <- c(\"loc\", \"scale\", \"shape\") pfitGEV0 <- GEVBayes0(MCMC = post$sim_vals, yMax = portpirie, MAP = MAPp) autoplot(pfitGEV0) + ggtitle(\"Classical RL plot: Bayesian GEV for portpirie\") +     theme_gray() myRL <- RL(pfitGEV0)"},{"path":[]},{"path":"https://irsn.github.io/bever/articles/User.html","id":"displayed-elements-1","dir":"Articles","previous_headings":"Return level plots > Predictive Return Level plot","what":"Displayed elements","title":"The bever Package User Guide","text":"plot shows predictive distribution maximum \\(Z^\\star\\) observed future “new” period given duration \\(w^\\star\\). precisely, values exceedance probability \\(p\\), show quantile \\(z^\\star(p)\\) \\(Z^\\star\\) defined \\(\\text{Pr}\\{Z^\\star > z^\\star(p)\\} = p\\). duration \\(w^\\star\\) usually chosen one year, planned lifetime equipment. exceedance probability \\(p\\) associated multiple \\(1/p\\) \\(w^\\star\\) hence period - e.g. \\(p=0.001\\) relates period \\(1000\\, w^\\star\\). However, order avoid confusions, bever use periods tickmarks \\(x\\)-axis predictive RL plot. makes sense display plot predictive quantile curves corresponding several durations \\(w^\\star_i\\). Remind choosing smaller duration \\(w^\\star\\) get “conservative” quantiles, compared risk \\(p / w^\\star\\). instance “millennial risk” thought defined exceedance probability \\(p_1 = 0.001\\) duration \\(w_1^\\star = 1\\) year \\(p_2 = 0.01\\) \\(w_2^\\star = 10\\) year. later case get smaller quantile.","code":""},{"path":"https://irsn.github.io/bever/articles/User.html","id":"illustration-poisson-gp-pot-for-garonne-data","dir":"Articles","previous_headings":"Return level plots > Predictive Return Level plot","what":"Illustration: Poisson-GP POT for Garonne data","title":"The bever Package User Guide","text":"using bever, plot obtained first calling standard predict method, autoplot method result produced predict. , autoplot method produces ggplot graphics object can modified.","code":"gpredBayes <- predict(gfitBayes) ## Warning in poisGPBayes0(MCMC = object$MCMC, threshold = object$threshold, : ## Since 'data' has class \"potData\" the formal arguments 'effDuration', 'nOT', ## 'MAX.*' and 'OTS.*' are ignored ## Warning in threshData(threshold = threshold, data = pd, exceed = FALSE): ## 'threshold' is smaller than the smallest observation autoplot(gpredBayes) +     ggtitle(\"Predictive RL plot : Bayesian POT for Garonne\") + theme_gray()"},{"path":"https://irsn.github.io/bever/articles/User.html","id":"illustration-gev-model-for-portpirie-1","dir":"Articles","previous_headings":"Return level plots > Predictive Return Level plot","what":"Illustration: GEV model for portpirie","title":"The bever Package User Guide","text":"","code":"ppredGEV0 <- predict(pfitGEV0) autoplot(ppredGEV0) +     ggtitle(\"Predictive RL plot : Bayesian GEV for portpirie\") + theme_gray()"},{"path":[]},{"path":"https://irsn.github.io/bever/articles/User.html","id":"revdbayes","dir":"Articles","previous_headings":"Relations to other packages","what":"revdbayes","title":"The bever Package User Guide","text":"revdbayes package uses single S3 class represent posterior (“fitted” versions) several types Bayesian EV models: gev, os, pp, bingp . class named \"evpost\". difference classical R packages eponymous creator function, objects class created using either r_post function faster-running r_post_rcpp function. creator functions many formal arguments different types models allowed, depending value formal named model. object class \"evpost\" essentially list. Since different kinds models can described, “slots” list elements can NULL. instance, element threshold NULL model gev os.","code":""},{"path":"https://irsn.github.io/bever/articles/User.html","id":"xxx-questions-on-bever-design","dir":"Articles","previous_headings":"","what":"XXX Questions on bever design","title":"The bever Package User Guide","text":"return coef method? Choose names data arguments make available ideas used Renext. can fit POT models using “OT” data, “Max” data “OTS” data. three optional arguments poisGPML creator, possibly Bayesian companion poisGPBayes.","code":""},{"path":[]},{"path":"https://irsn.github.io/bever/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yves Deville. Maintainer.","code":""},{"path":"https://irsn.github.io/bever/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Deville Y (2023). bever: Bayes Extreme-Value. R package version 0.1.4, https://irsn.github.io/bever/.","code":"@Manual{,   title = {bever: Bayes Extreme-Value},   author = {Yves Deville},   year = {2023},   note = {R package version 0.1.4},   url = {https://irsn.github.io/bever/}, }"},{"path":"https://irsn.github.io/bever/index.html","id":"r-package-bever","dir":"","previous_headings":"","what":"Bayes Extreme-Value  ","title":"Bayes Extreme-Value  ","text":"Yves Deville 2023-05-22","code":""},{"path":"https://irsn.github.io/bever/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Bayes Extreme-Value  ","text":"bever R package funded IRSN/Behrig. package devoted Bayesian approaches Extreme Value (EV) modelling, focus Markov Chain Monte-Carlo inference. package implement Bayesian estimation inference EV model. tasks left revdbayes package MCMC sampler can implemented using JAGS Stan. bever package aims producing classical results plots Return Level tables plots. main goal allow comparison frequentist Bayesian inference methods applied EV models. name bever relates Bayes Extreme-Value. modern ancient European languages, word relates river /one famous inhabitant. Hydrology may one field application.","code":""},{"path":"https://irsn.github.io/bever/index.html","id":"important-notes","dir":"","previous_headings":"","what":"Important notes","title":"Bayes Extreme-Value  ","text":"package still early stage development use block maxima block duration differing 1 well tested. now possible draw predictive curve graphics RL plot GEV models, Poisson-GP models. reason analysis still required transformation plotting positions “Renext style” use “block style”.","code":""},{"path":[]},{"path":"https://irsn.github.io/bever/index.html","id":"using-the-remotes-package","dir":"","previous_headings":"","what":"Using the remotes package","title":"Bayes Extreme-Value  ","text":"R session use install package make ready use. Mind default build vignette shipped package (long-form documentation). build vignette, use instead installation take longer time vignette accessible help package (link “Help Pages” section). can also select specific branch specific commit using suitable syntax install_github. instance install branch develop use See remotes package documentation details.","code":"library(remotes) install_github(\"IRSN/bever\", dependencies = TRUE) install_github(\"IRSN/bever\", dependencies = TRUE, build_vignettes = TRUE) install_github(\"IRSN/bever@develop\", dependencies = TRUE)"},{"path":[]},{"path":"https://irsn.github.io/bever/index.html","id":"cloning-the-repository","dir":"","previous_headings":"Clone, build and install","what":"Cloning the repository","title":"Bayes Extreme-Value  ","text":"can also clone repository install package. yet local bever repository, use git clone clone bever repository create bever sub-directory current directory, .e. directory git command issued. course can work authorisation clone.","code":"git clone https://github.com/IRSN/bever"},{"path":"https://irsn.github.io/bever/index.html","id":"installation-1","dir":"","previous_headings":"Clone, build and install","what":"Installation","title":"Bayes Extreme-Value  ","text":"Move parent directory cloned repository use following command terminal create tarball source file produce source tarball bever_x.y.z x, y z stand major, minor patch version numbers. can install command line Note must also packages required bever installed. can also use RStudio IDE install package.","code":"R CMD build bever R CMD INSTALL bever_x.y.z"},{"path":"https://irsn.github.io/bever/reference/CGPD.html","id":null,"dir":"Reference","previous_headings":"","what":"Density, Distribution Function, Quantile Function and\nRandom Generation for the Five-Parameter Compound Generalized\nPareto Distribution (CGPD) — CGPD","title":"Density, Distribution Function, Quantile Function and\nRandom Generation for the Five-Parameter Compound Generalized\nPareto Distribution (CGPD) — CGPD","text":"Density, distribution function, quantile function random generation five-parameter Compound Generalized Pareto Distibution (CGPD).","code":""},{"path":"https://irsn.github.io/bever/reference/CGPD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density, Distribution Function, Quantile Function and\nRandom Generation for the Five-Parameter Compound Generalized\nPareto Distribution (CGPD) — CGPD","text":"","code":"dCGPD(x, loc = 0.0, scale = 1.0, shape = 0.0,       scaleN, shapeN, EN, IDN, log = FALSE)  pCGPD(q, loc = 0.0, scale = 1.0, shape = 0.0,       scaleN, shapeN, EN, IDN, lower.tail = TRUE)  qCGPD(p, loc = 0.0, scale = 1.0, shape = 0.0,       scaleN, shapeN, EN, IDN, lower.tail = TRUE)  rCGPD(n, loc = 0.0, scale = 1.0, shape = 0.0,       scaleN, shapeN, EN, IDN)  pCGPD(   q,   loc = 0,   scale = 1,   shape = 0,   scaleN,   shapeN,   EN,   IDN,   lower.tail = TRUE )  qCGPD(   p,   loc = 0,   scale = 1,   shape = 0,   scaleN,   shapeN,   EN,   IDN,   lower.tail = TRUE )  rCGPD(n, loc = 0, scale = 1, shape = 0, scaleN, shapeN, EN, IDN)"},{"path":"https://irsn.github.io/bever/reference/CGPD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density, Distribution Function, Quantile Function and\nRandom Generation for the Five-Parameter Compound Generalized\nPareto Distribution (CGPD) — CGPD","text":"x, q Vector quantiles. loc Location parameter. Numeric vector length one. scale Scale parameter. Numeric vector length one. shape Shape parameter. Numeric vector length one. scaleN Scale GPD \\(N\\) part. Along shapeN provides parameterisation Binomial-Poisson-Negative Binomial familly. shapeN Shape GPD \\(N\\) part. Along scaleN provides parameterisation Binomial-Poisson-Negative Binomial familly. EN Expectation \\(N\\). Along IDN provides alternative parameterisation \\(N\\) part. IDN Index Dispersion \\(N\\). Along EN provides alternative parameterisation \\(N\\) part. log Logical; TRUE, densities p returned log(p). lower.tail Logical; TRUE (default), probabilities P[X <= x], otherwise, P[X > x]. p Vector probabilities. n Sample size.","code":""},{"path":"https://irsn.github.io/bever/reference/CGPD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density, Distribution Function, Quantile Function and\nRandom Generation for the Five-Parameter Compound Generalized\nPareto Distribution (CGPD) — CGPD","text":"numeric vector length equal length first argument parameters.","code":""},{"path":"https://irsn.github.io/bever/reference/CGPD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Density, Distribution Function, Quantile Function and\nRandom Generation for the Five-Parameter Compound Generalized\nPareto Distribution (CGPD) — CGPD","text":"distribution maximum \\(M\\) \\(N\\) ..d. r.vs \\(X_i\\) distribution \\(\\textrm{GPD}(\\mu,\\,\\sigma,\\,\\xi)\\) \\(N\\) r.v. non-negative integer values, independent sequence \\(X_i\\), Binomial, Poisson Negative Binomial distribution. distribution \\(N\\) can parameterized using two parameters \\(\\mu_N\\) \\(\\sigma_N\\) GPD style, alternatively using two parameters \\(\\mathrm{E}(N)\\) \\(\\textrm{ID}(N)\\) representing expectation index dispersion \\(N\\). three cases Binomial, Poisson Negative Binomial correspond \\(\\textrm{ID}_N < 0\\), \\(\\textrm{ID}_N = 0\\) \\(\\textrm{ID}_N > 0\\).","code":""},{"path":"https://irsn.github.io/bever/reference/CGPD.html","id":"caution","dir":"Reference","previous_headings":"","what":"Caution","title":"Density, Distribution Function, Quantile Function and\nRandom Generation for the Five-Parameter Compound Generalized\nPareto Distribution (CGPD) — CGPD","text":"distribution mixed-type. probability mass \\(-\\infty\\) corresponding possibility \\(N=0\\) case \\(M\\) maximum empty set, taken \\(-\\infty\\) corresponding max(mumeric(0)). Consequently sample drawn using rCGPD contains -Inf values positive probability.","code":""},{"path":"https://irsn.github.io/bever/reference/CGPD.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Density, Distribution Function, Quantile Function and\nRandom Generation for the Five-Parameter Compound Generalized\nPareto Distribution (CGPD) — CGPD","text":"Yves Deville (2019)  \"Bayesian Return Levels Extreme-Value Analysis\" IRSN technical report.","code":""},{"path":"https://irsn.github.io/bever/reference/CGPD.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Density, Distribution Function, Quantile Function and\nRandom Generation for the Five-Parameter Compound Generalized\nPareto Distribution (CGPD) — CGPD","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/bever/reference/CGPD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density, Distribution Function, Quantile Function and\nRandom Generation for the Five-Parameter Compound Generalized\nPareto Distribution (CGPD) — CGPD","text":"","code":"set.seed(1) ExpN <- runif(1) IDN <- rexp(1, rate = 1) scaleN <- 1 / ExpN shapeN <- (IDN - 1) / ExpN loc <- rnorm(1, mean = 0, sd = 10); scale <-  rexp(1) shape <- rnorm(1 , mean = 0, sd = 0.1) mass <- pCGPD(-Inf, scaleN = scaleN, shapeN = shapeN,            loc = loc, scale = scale, shape = shape)  q <- qCGPD(p = c(mass + 0.001, 0.999), scaleN = scaleN, shapeN = shapeN,            loc = loc, scale = scale, shape = shape) x <- seq(from = q[1] - 1, to = q[2], length.out = 200) F <- pCGPD(x, scaleN = scaleN, shapeN = shapeN,            loc = loc, scale = scale, shape = shape) plot(x, F, type = \"l\", xlab = \"\", ylab = \"\", ylim = c(0, 1),      col = \"orangered\") abline(h = mass, col = \"red\")  f <- dCGPD(x, scaleN = scaleN, shapeN = shapeN,            loc = loc, scale = scale, shape = shape) plot(x, f, type = \"l\", col = \"SteelBlue3\", xlab = \"\", ylab = \"\") title(main = sprintf(paste(\"ExpN = %4.1f IDN = %4.2f,\",                            \"loc = %4.1f, scale = %4.2f, shape = %4.2f\"),                      ExpN, IDN, loc, scale, shape))"},{"path":"https://irsn.github.io/bever/reference/GEVBayes0.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Posterior for a GEV Model — GEVBayes0","title":"Create a Posterior for a GEV Model — GEVBayes0","text":"Create \"Poor Man's\" Posterior GEV model using MCMC iterates.","code":""},{"path":"https://irsn.github.io/bever/reference/GEVBayes0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Posterior for a GEV Model — GEVBayes0","text":"","code":"GEVBayes0(MCMC, blockDuration = 1.0,           MAP = NULL,           yMax = NULL,           nMax = length(yMax))"},{"path":"https://irsn.github.io/bever/reference/GEVBayes0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Posterior for a GEV Model — GEVBayes0","text":"MCMC object can coerced matrix containing MCMC iterates. burnin period removed thinned necessary. blockDuration block duration given single positive numeric value. GEV distribution parameters sampled MCMC refers maximum period duration blockDuration. MAP optional vector Maximum Posteriori parameter vector. named names matching colnames MCMC. yMax optional vector observations. nMax optional number observations. Useful yMax given.","code":""},{"path":"https://irsn.github.io/bever/reference/GEVBayes0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Posterior for a GEV Model — GEVBayes0","text":"object class \"GEVBayes0\" inheriting  \"Bayes0\". object can used produce RL plots.","code":""},{"path":"https://irsn.github.io/bever/reference/GEVBayes0.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a Posterior for a GEV Model — GEVBayes0","text":"argument yMax intended classical     framework block maxima used corresponding     constant block duration. equivalent using     potData argument value potData(MAX.data = .list(yMax), MAX.effDuration = rep(blockDuration, length(yMax)).","code":""},{"path":[]},{"path":"https://irsn.github.io/bever/reference/GEVBayes0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Posterior for a GEV Model — GEVBayes0","text":"","code":"require(revdbayes) ## ======================================================================== ## Portpirie data. Note that 'yMax' is only used for graphics later ## ======================================================================== prior <- set_prior(prior = \"flatflat\", model = \"gev\") post <- rpost_rcpp(n = 10000, model = \"gev\", prior = prior,                        data = portpirie) ## retrieve the MAP within the object MAP <- post$f_mode names(MAP) <- c(\"loc\", \"scale\", \"shape\")  postGEV0 <- GEVBayes0(MCMC = post$sim_vals, yMax = portpirie, MAP = MAP)  ## ======================================================================== ## some methods ## ======================================================================== summary(postGEV0) #> GEV Model Bayesian Inference #> o Block duration : 1 #> o Number of blocks used: 65 #> o Number of MCMC iterates: 10000 #> o Posterior mean [sd]: #>            loc          scale          shape  #>  3.875 [0.029]  0.207 [0.022] -0.034 [0.100]  coef(postGEV0) #>             loc     scale       shape #> mean   3.874539 0.2068635 -0.03386931 #> median 3.874232 0.2052087 -0.04113732 #> mode   3.874750 0.1980440 -0.05010991 vcov(postGEV0) #>                 loc         scale        shape #> loc    0.0008364864  0.0002086140 -0.001008695 #> scale  0.0002086140  0.0004817316 -0.000719470 #> shape -0.0010086955 -0.0007194700  0.010072483  ## ======================================================================== ## RL plot ## ======================================================================== RL0 <- RL(postGEV0) autoplot(postGEV0) + ggtitle(\"GEV fit to Portpirie data\")   ## ======================================================================== ## predictive distribution ## ======================================================================== pred <- predict(postGEV0) autoplot(pred)   autoplot(predict(postGEV0, newDuration = 100)) +     ggtitle(\"Prediction for a 'new' period of 100 years\")"},{"path":"https://irsn.github.io/bever/reference/RL.GEVBayes0.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Levels and Credible Intervals for a Poisson-GP Model — RL.GEVBayes0","title":"Return Levels and Credible Intervals for a Poisson-GP Model — RL.GEVBayes0","text":"Compute return levels along credible bounds minimal GEV model Bayesian inference results.","code":""},{"path":"https://irsn.github.io/bever/reference/RL.GEVBayes0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Levels and Credible Intervals for a Poisson-GP Model — RL.GEVBayes0","text":"","code":"# S3 method for GEVBayes0 RL(   object,   period = NULL,   level = 0.7,   credintType = c(\"HPD\", \"eqtail\"),   smooth = missing(period),   ... )"},{"path":"https://irsn.github.io/bever/reference/RL.GEVBayes0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Levels and Credible Intervals for a Poisson-GP Model — RL.GEVBayes0","text":"object object class GEVBayes0 representing inference results GEV (block maxima) model. period vector periods return levels computed. level credible level credintType type credible interval wanted. See credInt. smooth Logical. TRUE bounds credible intervals smoothed period. ... used yet.","code":""},{"path":"https://irsn.github.io/bever/reference/RL.GEVBayes0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Levels and Credible Intervals for a Poisson-GP Model — RL.GEVBayes0","text":"object class \"RL.GEVBayes\" inheriting \"data.frame\". Period Return Period. expressed unit block duration given creation object stored object$blockDuration. blockDuration 2 (years) Period 100 (years), Return Level \\(50\\) blocks. Prob probability exceedance Return Level considered period. \\(T / w^\\star\\) \\(T\\) return period \\(w^\\star\\) block duration. LevelThe credible level formated form, e.g. \"95%\" provided level 0.95. Mode, Median, Mean Median Mean median mean return levels \\(\\rho(T;\\,\\boldsymbol{\\theta}^{[]})\\) corresponding MCMC iterates \\(\\boldsymbol{\\theta}^{[]}\\) GEV parameter vector \\(\\boldsymbol{\\theta}\\), mode obtained plugging MAP GEV parameter return level \\(\\rho(T;\\,\\boldsymbol{\\theta})\\).  corresponding Return Level curve can called \"modal\".  MAP available object, corresponding column contain NA. L, U Lower Upper bounds credible interval. Note \\(m\\) small integer \\(>1\\) \\(T = m w^\\star\\), given probability probability maximum \\(m\\) blocks duration \\(w^\\star\\) exceeds given level. holds \\(m\\) large.","code":""},{"path":"https://irsn.github.io/bever/reference/RL.GEVBayes0.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Return Levels and Credible Intervals for a Poisson-GP Model — RL.GEVBayes0","text":"Chapter 3 Coles S. (2001) Introduction Statistical Modeling Extreme  Values. Springer-Verlag.","code":""},{"path":"https://irsn.github.io/bever/reference/RL.poisGPBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Levels and Credible Intervals for a Poisson-GP Model — RL.poisGPBayes","title":"Return Levels and Credible Intervals for a Poisson-GP Model — RL.poisGPBayes","text":"Compute return levels along credible bounds Poisson-GP model Bayesian inference results.","code":""},{"path":"https://irsn.github.io/bever/reference/RL.poisGPBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Levels and Credible Intervals for a Poisson-GP Model — RL.poisGPBayes","text":"","code":"# S3 method for poisGPBayes RL(   object,   period = NULL,   level = 0.7,   credintType = c(\"HPD\", \"eqtail\"),   smooth = missing(period),   ... )"},{"path":"https://irsn.github.io/bever/reference/RL.poisGPBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Levels and Credible Intervals for a Poisson-GP Model — RL.poisGPBayes","text":"object object class poisGPBayes representing inference results Poisson-GP model. period vector periods return levels computed. level credible level. credintType type credible interval wanted. See credInt. smooth Logical. TRUE bounds credible intervals smoothed period. ... used yet.","code":""},{"path":"https://irsn.github.io/bever/reference/RL.poisGPBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Levels and Credible Intervals for a Poisson-GP Model — RL.poisGPBayes","text":"object class \"RL.poisGPBayes\" inheriting \"data.frame\".","code":""},{"path":"https://irsn.github.io/bever/reference/RL.poisGPBayes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return Levels and Credible Intervals for a Poisson-GP Model — RL.poisGPBayes","text":"Three return levels computed, named \"mode\", \"median\" \"mean\" relation posterior distribution return level. column \"mode\" contain value marginal mode return levels, rather modal curve obtained plugging MAP parameter quantile function. leads smooth curve; value given probability period (usually slightly) different posterior marginal mode.","code":""},{"path":[]},{"path":"https://irsn.github.io/bever/reference/RL.poisGPBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return Levels and Credible Intervals for a Poisson-GP Model — RL.poisGPBayes","text":"","code":"fit <- poisGPBayes(data = Garonne$OTdata$Flow,                    threshold = 2500,                    effDuration = Garonne$OTinfo$effDuration) #> Warning: 'threshold' is smaller than the smallest observation ## Return Levels RL(fit) #>    Period Level     Mode   Median     Mean        L        U #> 1     1.1   70% 3592.394 3603.911 3606.748 3466.008 3736.945 #> 2     1.5   70% 3923.980 3942.152 3945.891 3791.835 4089.107 #> 3     2.0   70% 4219.318 4246.208 4250.229 4083.324 4408.038 #> 4     5.0   70% 5086.744 5146.918 5159.344 4924.794 5347.140 #> 5    10.0   70% 5674.916 5759.889 5792.397 5476.151 6013.576 #> 6    20.0   70% 6210.312 6319.849 6384.222 5922.979 6624.648 #> 7    50.0   70% 6845.062 6992.438 7111.184 6446.589 7438.863 #> 8    75.0   70% 7101.729 7266.585 7414.997 6655.948 7789.478 #> 9   100.0   70% 7275.464 7452.794 7624.519 6741.866 7984.086 #> 10  125.0   70% 7405.632 7590.196 7783.772 6803.596 8128.583 #> 11  150.0   70% 7509.101 7701.225 7911.863 6889.853 8284.769 #> 12  175.0   70% 7594.609 7793.219 8018.787 7014.605 8476.873 #> 13  200.0   70% 7667.248 7871.921 8110.420 7018.116 8534.135 #> 14  250.0   70% 7785.736 8003.018 8261.562 7026.596 8638.852 #> 15  300.0   70% 7879.921 8105.028 8383.273 7119.806 8805.737 #> 16  500.0   70% 8131.734 8385.530 8716.233 7243.966 9147.718 #> 17  700.0   70% 8288.320 8562.494 8929.494 7347.437 9398.449 #> 18 1000.0   70% 8446.687 8743.316 9150.718 7424.324 9633.922 autoplot(fit) #> Warning: Since 'data' has class \"potData\" the formal arguments 'effDuration', 'nOT', 'MAX.*' and 'OTS.*' are ignored #> Warning: 'threshold' is smaller than the smallest observation #> Scale for x is already present. #> Adding another scale for x, which will replace the existing scale."},{"path":"https://irsn.github.io/bever/reference/RL.poisGPBayes0.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Levels and Credible Intervals for a Poisson-GP Model \n","title":"Return Levels and Credible Intervals for a Poisson-GP Model \n","text":"Compute return levels along credible bounds Poisson-GP model Bayesian inference results, \"Poor Man's version\".","code":""},{"path":"https://irsn.github.io/bever/reference/RL.poisGPBayes0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Levels and Credible Intervals for a Poisson-GP Model \n","text":"","code":"# S3 method for poisGPBayes0 RL(   object,   period,   level = 0.7,   credintType = c(\"HPD\", \"eqtail\"),   smooth = TRUE,   ... )"},{"path":"https://irsn.github.io/bever/reference/RL.poisGPBayes0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Levels and Credible Intervals for a Poisson-GP Model \n","text":"object poisGPBayes0 object use. period See  RL.poisGPBayes. level See  RL.poisGPBayes. credintType type credible interval wanted. See credInt. smooth See RL.poisGPBayes. ... arguments passed RL.poisGPBayes.","code":""},{"path":"https://irsn.github.io/bever/reference/RL.poisGPBayes0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Levels and Credible Intervals for a Poisson-GP Model \n","text":"object class \"RL.poisGPBayes\" inheriting \"data.frame\".","code":""},{"path":"https://irsn.github.io/bever/reference/RL.poisGPBayes0.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return Levels and Credible Intervals for a Poisson-GP Model \n","text":"MCMC object rate Poisson process sampled (hence column \"lambda\" matrix MCMC iterates) new suitable column added sampling marginal posterior, RL method \"poisGPBayes\" class used.","code":""},{"path":"https://irsn.github.io/bever/reference/as.poisGPBayes0.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Return Levels using an Extreme-Value Model — as.poisGPBayes0","title":"Compute Return Levels using an Extreme-Value Model — as.poisGPBayes0","text":"Compute Return Levels confidence credible intervals .","code":""},{"path":"https://irsn.github.io/bever/reference/as.poisGPBayes0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Return Levels using an Extreme-Value Model — as.poisGPBayes0","text":"","code":"as.poisGPBayes0(object, ...)"},{"path":"https://irsn.github.io/bever/reference/as.poisGPBayes0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Return Levels using an Extreme-Value Model — as.poisGPBayes0","text":"object object coerced. ... used yet.","code":""},{"path":"https://irsn.github.io/bever/reference/as.poisGPBayes0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Return Levels using an Extreme-Value Model — as.poisGPBayes0","text":"object containing return levels object inheriting data.frame. method typically used poisGPBayes object access method written Poor Man's objects. object class \"poisGPBayes0\" inheriting \"Bayes0\".","code":""},{"path":"https://irsn.github.io/bever/reference/as.poisGPBayes0.poisGPBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Coercion Method — as.poisGPBayes0.poisGPBayes","title":"Coercion Method — as.poisGPBayes0.poisGPBayes","text":"Coercion method.","code":""},{"path":"https://irsn.github.io/bever/reference/as.poisGPBayes0.poisGPBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coercion Method — as.poisGPBayes0.poisGPBayes","text":"","code":"# S3 method for poisGPBayes as.poisGPBayes0(object, ...)"},{"path":"https://irsn.github.io/bever/reference/as.poisGPBayes0.poisGPBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coercion Method — as.poisGPBayes0.poisGPBayes","text":"object object class \"poisGPBayes0\" ... arguments passed poisGPBayes0.","code":""},{"path":"https://irsn.github.io/bever/reference/as.poisGPBayes0.poisGPBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coercion Method — as.poisGPBayes0.poisGPBayes","text":"object class \"poisGPBayes0\".","code":""},{"path":"https://irsn.github.io/bever/reference/as.poisGPBayes0.poisGPBayes.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Coercion Method — as.poisGPBayes0.poisGPBayes","text":"Inasmuch classes \"poisGPBayes\" \"poisGPBayes0\" contain named list consistent naming rules method nearly changes class object. made work way future.","code":""},{"path":"https://irsn.github.io/bever/reference/autolayer.predRL.html","id":null,"dir":"Reference","previous_headings":"","what":"autolayer Method for Predictive Return Levels — autolayer.predRL","title":"autolayer Method for Predictive Return Levels — autolayer.predRL","text":"Predictive Return Level curve","code":""},{"path":"https://irsn.github.io/bever/reference/autolayer.predRL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"autolayer Method for Predictive Return Levels — autolayer.predRL","text":"","code":"# S3 method for predRL autolayer(object, aes = FALSE, ...)"},{"path":"https://irsn.github.io/bever/reference/autolayer.predRL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"autolayer Method for Predictive Return Levels — autolayer.predRL","text":"object object class \"predRL\" corresponding predictive Return Levels. aes Logical. TRUE colour linetype line added aesthetic odred appear legends. ... arguments passed geom_line.","code":""},{"path":"https://irsn.github.io/bever/reference/autolayer.predRL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"autolayer Method for Predictive Return Levels — autolayer.predRL","text":"ggplot layer","code":""},{"path":"https://irsn.github.io/bever/reference/autolayer.predRL.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"autolayer Method for Predictive Return Levels — autolayer.predRL","text":"argument object contains table computed predictive Return Levels, correspondence exceedance probability. layer shows tail-quantile function predictive distribution.","code":""},{"path":"https://irsn.github.io/bever/reference/autolayer.predRL.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"autolayer Method for Predictive Return Levels — autolayer.predRL","text":"practice predictive distribution Extreme-Value model usually heavy tail. Therefore least small probabilities exceedance \\(p\\) curve convex (upward concave).","code":""},{"path":[]},{"path":"https://irsn.github.io/bever/reference/autoplot.GEVBayes0.html","id":null,"dir":"Reference","previous_headings":"","what":"autoplot Method for the ","title":"autoplot Method for the ","text":"Autoplot object call \"GEVBayes0\".","code":""},{"path":"https://irsn.github.io/bever/reference/autoplot.GEVBayes0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"autoplot Method for the ","text":"","code":"# S3 method for GEVBayes0 autoplot(   object,   which = \"RL\",   level = 0.7,   points = c(\"p\", \"none\"),   a = 0.5,   xVar = c(\"T\", \"p\"),   trace = 0,   ... )"},{"path":"https://irsn.github.io/bever/reference/autoplot.GEVBayes0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"autoplot Method for the ","text":"object object class \"GEVBayes0\" describing inference results GEV model. used yet. future define type plot build. now RL plot available. level level confidence display. points plotting positions use show points object data shiipped . value \"H\" corresponds H-points Nelson's plotting positions value \"p\" correponds p-points ppoints function. See RP.potData package potomax. Value argument ppoints function points \"p\". ignored otherwise. xVar variable mapped \\(x\\) axis. value \"T\" corresponds period: multiple block duration attached object. value \"p\" corresponds exccedance probability related block duration. relation two simply \\(p = 1 / T\\). trace Integer level verbosity. ... arguments passed RL.","code":""},{"path":"https://irsn.github.io/bever/reference/autoplot.GEVBayes0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"autoplot Method for the ","text":"object class \"gg\" inheriting  \"ggplot\" typically used  print method.","code":""},{"path":"https://irsn.github.io/bever/reference/autoplot.RL.GEVBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"autoplot Method for the ","title":"autoplot Method for the ","text":"Autoplot object class \"RL.GEVBayes\" containing Return Levels related inference results.","code":""},{"path":"https://irsn.github.io/bever/reference/autoplot.RL.GEVBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"autoplot Method for the ","text":"","code":"# S3 method for RL.GEVBayes autoplot(object,          xVar = c(\"T\", \"p\"),         trace = 0,... )"},{"path":"https://irsn.github.io/bever/reference/autoplot.RL.GEVBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"autoplot Method for the ","text":"object object class \"RL.GEVBayes\" describing     Return Levels related Bayesian inference results GEV     model. object generated RL.GEVBayes0. ## @param level Credible level. xVar variable used match \\(x\\)-axis. value \"T\" lead use column named \"Period\" object value \"p\" lead use column named \"Prob\". trace Integer level verbosity. ... arguments passed RL.","code":""},{"path":"https://irsn.github.io/bever/reference/autoplot.RL.GEVBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"autoplot Method for the ","text":"object class \"gg\" inheriting  \"ggplot\", typically used print method.","code":""},{"path":[]},{"path":"https://irsn.github.io/bever/reference/autoplot.RL.poisGPBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"autoplot Method for the ","title":"autoplot Method for the ","text":"Autoplot object class \"RL.poisGPBayes\" containing Return Levels related inference results.","code":""},{"path":"https://irsn.github.io/bever/reference/autoplot.RL.poisGPBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"autoplot Method for the ","text":"","code":"# S3 method for RL.poisGPBayes autoplot(object, ...)"},{"path":"https://irsn.github.io/bever/reference/autoplot.RL.poisGPBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"autoplot Method for the ","text":"object object class \"RL.poisGPBayes\" describing Return Levels related Bayesian inference results Poisson-GP model. ... arguments passed RL.","code":""},{"path":"https://irsn.github.io/bever/reference/autoplot.RL.poisGPBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"autoplot Method for the ","text":"object class \"gg\" inheriting  \"ggplot\", typically used print method.","code":""},{"path":[]},{"path":"https://irsn.github.io/bever/reference/autoplot.poisGPBayes0.html","id":null,"dir":"Reference","previous_headings":"","what":"autoplot Method for the ","title":"autoplot Method for the ","text":"Autoplot object call \"poisGPBayes\".","code":""},{"path":"https://irsn.github.io/bever/reference/autoplot.poisGPBayes0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"autoplot Method for the ","text":"","code":"# S3 method for poisGPBayes0 autoplot(object,          which = c(\"RL\", \"pp\"),          level = 0.70,          points = c(\"H\", \"p\", \"none\"), a = 0.5,          allPoints = FALSE,          trace = 0, ...)"},{"path":"https://irsn.github.io/bever/reference/autoplot.poisGPBayes0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"autoplot Method for the ","text":"object object class \"poisGPBayes\" describing inference results Poisson-GP model. type plot wanted. level Credible level(s). points, , allPoints autoplot.poisGP. trace Integer level verbosity. ... arguments passed RL.","code":""},{"path":"https://irsn.github.io/bever/reference/autoplot.poisGPBayes0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"autoplot Method for the ","text":"object class \"gg\" inheriting  \"ggplot\" typically used  print method.","code":""},{"path":"https://irsn.github.io/bever/reference/autoplot.poisGPBayes0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"autoplot Method for the ","text":"","code":"## ======================================================================== ## Use the Garonne data from Renext ## ======================================================================== fitBayes <- poisGPBayes(data = Garonne$OTdata$Flow,                         threshold = 2500,                         effDuration = Garonne$OTinfo$effDuration) #> Warning: 'threshold' is smaller than the smallest observation  ## ======================================================================== ## S3 methods: Return Levels, ... ## ======================================================================== RLBayes <- RL(fitBayes) autoplot(fitBayes)            ## nearly the same plot #> Warning: Since 'data' has class \"potData\" the formal arguments 'effDuration', 'nOT', 'MAX.*' and 'OTS.*' are ignored #> Warning: 'threshold' is smaller than the smallest observation #> Scale for x is already present. #> Adding another scale for x, which will replace the existing scale."},{"path":"https://irsn.github.io/bever/reference/autoplot.predRL.html","id":null,"dir":"Reference","previous_headings":"","what":"autoplot Method for Predictive Return Levels — autoplot.predRL","title":"autoplot Method for Predictive Return Levels — autoplot.predRL","text":"Predictive Return Level plot using object containing Return Levels.","code":""},{"path":"https://irsn.github.io/bever/reference/autoplot.predRL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"autoplot Method for Predictive Return Levels — autoplot.predRL","text":"","code":"# S3 method for predRL autoplot(object, points = c(\"none\", \"p\"), a = 0.5, ...)"},{"path":"https://irsn.github.io/bever/reference/autoplot.predRL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"autoplot Method for Predictive Return Levels — autoplot.predRL","text":"object object class \"predRL\" corresponding predictive Return Levels. points Character indicating data attached object () shown (value \"p\") (value \"none\"). value argument function ppoints computing plotting postiions. ... used yet.","code":""},{"path":"https://irsn.github.io/bever/reference/autoplot.predRL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"autoplot Method for Predictive Return Levels — autoplot.predRL","text":"object class \"gg\" inheriting \"ggplot\".","code":""},{"path":"https://irsn.github.io/bever/reference/autoplot.predRL.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"autoplot Method for Predictive Return Levels — autoplot.predRL","text":"argument object contains table computed predictive Return Levels, correspondence exceedance probability. plot shows tail-quantile function predictive distribution.","code":""},{"path":"https://irsn.github.io/bever/reference/autoplot.predRL.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"autoplot Method for Predictive Return Levels — autoplot.predRL","text":"practice predictive distribution Extreme-Value model usually heavy tail. Therefore least small probabilities exceedance \\(p\\) curve convex (upward concave).","code":""},{"path":[]},{"path":"https://irsn.github.io/bever/reference/autoplot.predRLList.html","id":null,"dir":"Reference","previous_headings":"","what":"autoplot Method for a List of Prediction Results — autoplot.predRLList","title":"autoplot Method for a List of Prediction Results — autoplot.predRLList","text":"Autoplot list prediction results, usually compare .","code":""},{"path":"https://irsn.github.io/bever/reference/autoplot.predRLList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"autoplot Method for a List of Prediction Results — autoplot.predRLList","text":"","code":"# S3 method for predRLList autoplot(object, groupName = \"\", ...)"},{"path":"https://irsn.github.io/bever/reference/autoplot.predRLList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"autoplot Method for a List of Prediction Results — autoplot.predRLList","text":"object named list elements class \"predRL\". groupName string used label legend. ... used yet.","code":""},{"path":"https://irsn.github.io/bever/reference/autoplot.predRLList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"autoplot Method for a List of Prediction Results — autoplot.predRLList","text":"object class \"gg\" inheriting \"ggplot\".","code":""},{"path":"https://irsn.github.io/bever/reference/autoplot.predRLList.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"autoplot Method for a List of Prediction Results — autoplot.predRLList","text":"list must given S3 class \"predRLList\" order call autoplot method. method can used draw several curves plot use facets thanks functions facet_grid facte_wrap.","code":""},{"path":"https://irsn.github.io/bever/reference/autoplot.predRLList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"autoplot Method for a List of Prediction Results — autoplot.predRLList","text":"","code":"prior <- set_prior(prior = \"flatflat\", model = \"gev\") post <- rpost_rcpp(n = 10000, model = \"gev\", prior = prior,                    data = portpirie) pfitGEV0 <- GEVBayes0(MCMC = post$sim_vals, yMax = portpirie) pL <- list(\"1 year\" = predict(pfitGEV0),            \"10 year\"= predict(pfitGEV0, newDuration = 10)) class(pL) <- \"predRLList\" g <- autoplot(pL, groupName = \"period\") +          ggtitle(\"Predictive RL plot : Bayesian GEV for portpirie\") +              theme_gray() g  g + facet_grid(NewDuration ~ ., scales = \"free_y\")"},{"path":"https://irsn.github.io/bever/reference/bever-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayes Extreme-Value — bever-package","title":"Bayes Extreme-Value — bever-package","text":"Collection functions cope Bayes Extreme-Value models     various parameterisations.","code":""},{"path":"https://irsn.github.io/bever/reference/bever-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayes Extreme-Value — bever-package","text":"package yet installed build time.","code":""},{"path":"https://irsn.github.io/bever/reference/bever-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayes Extreme-Value — bever-package","text":"Yves Deville <deville.yves@alpestat.com>  Maintainer: Yves Deville <deville.yves@alpestat.com>","code":""},{"path":"https://irsn.github.io/bever/reference/bever-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayes Extreme-Value — bever-package","text":"","code":"## ======================================================================== ## 'portirie' example.  Wrap the results given by 'revdbayes', ## retrieving the MAP within the object ## ========================================================================= prior <- set_prior(prior = \"flatflat\", model = \"gev\") post <- rpost_rcpp(n = 10000, model = \"gev\", prior = prior,                    data = portpirie) MAP <- post$f_mode names(MAP) <- c(\"loc\", \"scale\", \"shape\") postGEV0 <- GEVBayes0(MCMC = post$sim_vals, yMax = portpirie, MAP = MAP)  ## ======================================================================== ## RL plot ## ======================================================================== RL0 <- RL(postGEV0) autoplot(postGEV0) + ggtitle(\"GEV fit to Portpirie data\")   ## ======================================================================== ## predictive distribution: compute and autoplot for a given 'new' ## duration ## ======================================================================== pred <- predict(postGEV0) autoplot(pred, xVar = \"T\")  autoplot(predict(postGEV0, newDuration = 100)) +    ggtitle(\"Prediction for a 'new' period of 100 years\")   ## ======================================================================== ## Compare the predictive distribution corresponding to a new duration ## identical to the (constant) block duration. ## ## CAUTION: Models with blockDuration != 1.0 have not been fully ## checked yet. ## ======================================================================== g <- autoplot(postGEV0, xVar = \"p\") g <- g + autolayer(pred, aes = TRUE) #> Warning: Ignoring unknown aesthetics: fill g"},{"path":"https://irsn.github.io/bever/reference/checkParNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Check a Candidate Vector or Parameter Names for an\nExtreme-Value Model — checkParNames","title":"Check a Candidate Vector or Parameter Names for an\nExtreme-Value Model — checkParNames","text":"Given candidate vector parameter names, check match known naming rule suitable given model.","code":""},{"path":"https://irsn.github.io/bever/reference/checkParNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check a Candidate Vector or Parameter Names for an\nExtreme-Value Model — checkParNames","text":"","code":"checkParNames(parNames, model, all = TRUE, trace = 0)"},{"path":"https://irsn.github.io/bever/reference/checkParNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check a Candidate Vector or Parameter Names for an\nExtreme-Value Model — checkParNames","text":"parNames Candidate vector parameter names. model possible Extreme-Value model. case-insensitive. Logical. TRUE, vector assumed contain parameter names, possibly different order. trace Integer level verbosity.","code":""},{"path":"https://irsn.github.io/bever/reference/checkParNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check a Candidate Vector or Parameter Names for an\nExtreme-Value Model — checkParNames","text":"list following items rule name identified rule naming parameters. instance, \"names\" corresponds rule used package, \"greek\" corresponds using names greek letters associated parameters. inParNames copy vector parNames given input. parNames vector names corresponding rule \"names\" hence convention used package. indIn, indOut Vectors integer indices relating conventional vector names. indIn corresponds given names, possibly translated conventional rule. indOut corresponds omitted names, can positive length FALSE input.","code":""},{"path":"https://irsn.github.io/bever/reference/checkParNames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check a Candidate Vector or Parameter Names for an\nExtreme-Value Model — checkParNames","text":"","code":"checkParNames(parNames = c(\"sigma\", \"mu\", \"xi\"), model = \"GEV\") #> $rule #> [1] \"greek\" #>  #> $inParNames #> [1] \"mu\"    \"sigma\" \"xi\"    #>  #> $parNames #> [1] \"loc\"   \"scale\" \"shape\" #>  #> $indIn #> [1] 2 1 3 #>  #> $indOut #> integer(0) #>  #> $pos #>    mu sigma    xi  #>     2     1     3  #>  checkParNames(parNames = c(\"sigma\", \"xi\"), model = \"GEV\", all = FALSE) #> $rule #> [1] \"greek\" #>  #> $inParNames #> [1] \"mu\"    \"sigma\" \"xi\"    #>  #> $parNames #> [1] \"loc\"   \"scale\" \"shape\" #>  #> $indIn #> [1] 2 3 #>  #> $indOut #> [1] 1 #>  #> $pos #>    mu sigma    xi  #>     3     1     2  #>  checkParNames(parNames = c(\"lambda\", \"sigma\", \"xi\"), model = \"poisgp\") #> $rule #> [1] \"greek\" #>  #> $inParNames #> [1] \"lambda\" \"sigma\"  \"xi\"     #>  #> $parNames #> [1] \"lambda\" \"scale\"  \"shape\"  #>  #> $indIn #> [1] 1 2 3 #>  #> $indOut #> integer(0) #>  #> $pos #> lambda  sigma     xi  #>      1      2      3  #>"},{"path":"https://irsn.github.io/bever/reference/credInt.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a Credible Interval for a Given Unimodal Probability\nDistribution — credInt","title":"Find a Credible Interval for a Given Unimodal Probability\nDistribution — credInt","text":"Credible interval unimodal density, usually posterior distribution Bayesian framework.","code":""},{"path":"https://irsn.github.io/bever/reference/credInt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a Credible Interval for a Given Unimodal Probability\nDistribution — credInt","text":"","code":"credInt(dist, level = 0.95,         type = c(\"HPD\", \"eqtail\", \"both\"),         plot = FALSE, ...)"},{"path":"https://irsn.github.io/bever/reference/credInt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a Credible Interval for a Given Unimodal Probability\nDistribution — credInt","text":"dist Either character describing distribution \"norm\" \"gamma\", object class \"density\" numeric vector assumed provide sample distribution. level Numeric value specifying probability level.  vector length \\(> 1\\) accepted yet. type set \"HPD\", credible interval Highest Posterior Density interval. set \"eqtail\" bounds found using cumulative distribution function allocating probability left right tails. plot Logical. TRUE plot shown. ... arguments passed distribution functions: density, quantile.","code":""},{"path":"https://irsn.github.io/bever/reference/credInt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find a Credible Interval for a Given Unimodal Probability\nDistribution — credInt","text":"numeric vector two bounds array type \"\".","code":""},{"path":"https://irsn.github.io/bever/reference/credInt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find a Credible Interval for a Given Unimodal Probability\nDistribution — credInt","text":"applications, dist specific distribution within parametric family. can occur instance conjugacy property holds.","code":""},{"path":"https://irsn.github.io/bever/reference/credInt.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Find a Credible Interval for a Given Unimodal Probability\nDistribution — credInt","text":"dist intended describe distribution within parametric family, must taken character string prefixed \"d\", \"p\" \"q\" get density, distribution quantile functions. values parameters can passed dots ... See Examples.","code":""},{"path":"https://irsn.github.io/bever/reference/credInt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find a Credible Interval for a Given Unimodal Probability\nDistribution — credInt","text":"","code":"credInt(\"gumbel\", level = 0.95, plot = TRUE)  #>             L        U #> HPD -1.561441 3.161364 credInt(\"gamma\", level = 0.95, plot = TRUE, shape = 4)  #>             L        U #> HPD 0.7122661 7.948062 credInt(\"gumbel\", level = 0.95, plot = TRUE, type = \"both\")  #>                L        U #> HPD    -1.561441 3.161364 #> eqtail -1.305323 3.676247 x <- rgamma(n = 6000, shape = 4) credInt(x, level = 0.95, plot = TRUE) #>            L        U #> HPD 0.730383 7.847553 ## nearly the same d <- density(x) credInt(x, level = 0.95, plot = TRUE)  #>            L        U #> HPD 0.730383 7.847553"},{"path":"https://irsn.github.io/bever/reference/formatLevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Levels of Confidence or Probabilities — formatLevel","title":"Format Levels of Confidence or Probabilities — formatLevel","text":"Format levels confidence probability e.g. build variable names.","code":""},{"path":"https://irsn.github.io/bever/reference/formatLevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Levels of Confidence or Probabilities — formatLevel","text":"","code":"formatLevel(level)"},{"path":"https://irsn.github.io/bever/reference/formatLevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Levels of Confidence or Probabilities — formatLevel","text":"level Numeric vector levels confidence probabilities 0 1.","code":""},{"path":"https://irsn.github.io/bever/reference/formatLevel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Levels of Confidence or Probabilities — formatLevel","text":"character vector.","code":""},{"path":"https://irsn.github.io/bever/reference/formatLevel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Levels of Confidence or Probabilities — formatLevel","text":"","code":"formatLevel(c(0.70, 0.95)) #> [1] \"70%\" \"95%\""},{"path":"https://irsn.github.io/bever/reference/poisGPBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Poisson-GP Model with Bayesian Inference Results — poisGPBayes","title":"Poisson-GP Model with Bayesian Inference Results — poisGPBayes","text":"Create object representing Poisson-GP model Bayesian inference result using revdbayes package.","code":""},{"path":"https://irsn.github.io/bever/reference/poisGPBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Poisson-GP Model with Bayesian Inference Results — poisGPBayes","text":"","code":"poisGPBayes(data, threshold, effDuration,             a0 = 1, b0 = 0,             priorGP = \"flatflat\",             lowerGP = c(\"scale\" = 0, \"shape\" = -0.9),             upperGP = c(\"scale\" = Inf, \"shape\" = Inf),             trace = 0)"},{"path":"https://irsn.github.io/bever/reference/poisGPBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Poisson-GP Model with Bayesian Inference Results — poisGPBayes","text":"data Numeric vector containing marks. threshold threshold. effDuration effective duration observation period. a0, b0 Shape rate gamma prior Poisson rate lambda. Note choosing a0 = 1 b0 = 0 define improper flat prior \\((0, \\infty)\\). a0 dimensionless compares \\(1 +\\) number observations, b0 dimension duration compares duration observation. priorGP character defining prior used GP part model revdbayes package. lowerGP, upperGP Bounds GP parameters. trace Level verbosity.","code":""},{"path":"https://irsn.github.io/bever/reference/poisGPBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Poisson-GP Model with Bayesian Inference Results — poisGPBayes","text":"object S3 class \"poisGPBayes\".","code":""},{"path":"https://irsn.github.io/bever/reference/poisGPBayes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Poisson-GP Model with Bayesian Inference Results — poisGPBayes","text":"@details  function mainly relies revdbayes package  used produce results Bayesian inference using  MCMC. However Maximum Posteriori (MAP) parameter  vector computed maximising posterior function using  numerical optimisation. allows better comparison  frequentist ML approach used  poisGP.","code":""},{"path":[]},{"path":"https://irsn.github.io/bever/reference/poisGPBayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Poisson-GP Model with Bayesian Inference Results — poisGPBayes","text":"","code":"## ======================================================================== ## Use the Garonne data from Renext ## ======================================================================== fit <- poisGPBayes(data = Garonne$OTdata$Flow,                    threshold = 2500, effDuration = 64) #> Warning: 'threshold' is smaller than the smallest observation  ## ======================================================================== ## Some S3 methods: RL for Return Levels, ... ## ======================================================================== class(fit) #> [1] \"poisGPBayes\" coef(fit) #>        lambda    scale      shape #> mode 2.359557 1239.904 -0.1356296 RL(fit) #>    Period Level     Mode   Median     Mean        L        U #> 1     1.1   70% 3609.303 3618.069 3622.249 3475.020 3749.386 #> 2     1.5   70% 3940.193 3954.955 3960.563 3795.332 4098.430 #> 3     2.0   70% 4234.910 4259.698 4264.141 4083.407 4413.235 #> 4     5.0   70% 5100.513 5154.605 5170.913 4925.161 5352.844 #> 5    10.0   70% 5687.450 5768.397 5802.284 5462.380 5997.135 #> 6    20.0   70% 6221.722 6327.763 6392.509 5950.471 6649.227 #> 7    50.0   70% 6855.138 7004.816 7117.486 6453.699 7427.608 #> 8    75.0   70% 7111.266 7279.590 7420.467 6652.257 7775.053 #> 9   100.0   70% 7284.637 7466.466 7629.417 6758.908 7991.787 #> 10  125.0   70% 7414.531 7608.647 7788.237 6835.766 8155.347 #> 11  150.0   70% 7517.783 7722.144 7915.980 6895.842 8292.896 #> 12  175.0   70% 7603.111 7815.592 8022.615 6951.127 8413.295 #> 13  200.0   70% 7675.597 7892.799 8114.001 6965.566 8485.049 #> 14  250.0   70% 7793.836 8023.002 8264.737 7046.091 8654.157 #> 15  300.0   70% 7887.824 8125.949 8386.124 7113.225 8797.124 #> 16  500.0   70% 8139.108 8406.377 8718.208 7248.326 9156.076 #> 17  700.0   70% 8295.364 8584.671 8930.920 7335.337 9394.395 #> 18 1000.0   70% 8453.398 8762.482 9151.588 7420.329 9645.842 autoplot(fit) #> Warning: Since 'data' has class \"potData\" the formal arguments 'effDuration', 'nOT', 'MAX.*' and 'OTS.*' are ignored #> Warning: 'threshold' is smaller than the smallest observation #> Scale for x is already present. #> Adding another scale for x, which will replace the existing scale."},{"path":"https://irsn.github.io/bever/reference/poisGPBayes0.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Posterior for a Poisson-GP Model — poisGPBayes0","title":"Create a Posterior for a Poisson-GP Model — poisGPBayes0","text":"Create object representing \"Poor Man's\" Posterior Poisson-GP model, mainly using MCMC iterates.","code":""},{"path":"https://irsn.github.io/bever/reference/poisGPBayes0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Posterior for a Poisson-GP Model — poisGPBayes0","text":"","code":"poisGPBayes0(MCMC, threshold,              data = NULL, effDuration,              MAX.data = NULL, MAX.effDuration = NULL,              OTS.data = NULL, OTS.threshold = NULL, OTS.effDuration = NULL,              MAP = NULL,              nOT = NA,              a0 = 1.0, b0 = 0.0)"},{"path":"https://irsn.github.io/bever/reference/poisGPBayes0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Posterior for a Poisson-GP Model — poisGPBayes0","text":"MCMC object can coerced matrix containing MCMC iterates. burnin period removed thinned necessary. threshold POT threshold. data optional structure containing observations Threshold. user make sure data identical used obtain MCMC. can numeric vector object inheriting one two classes \"Rendata\" (Renext) \"potData\" (potomax) case coerced class \"potData\". effDuration observation effective duration. data can coerced potData, provided value effDuration ignored value object$OT$effDuration used instead. MAX.data, MAX.effDuration Optional censored data (type block maxima \\(r\\)-largest) used poisGP. Ignored data inherits one two classes \"Rendata\" \"potData\" OTS.data, OTS.threshold, OTS.effDuration Optional censored data used poisGP. Ignored data inherits one two classes \"Rendata\" \"potData\" MAP optional vector Maximum Posteriori parameter vector. named names matching colnames MCMC. optional integer giving number exceedances observation period. number needed MCMC column rate Poisson process. consistent MCMC. a0, b0 shape rate prior lambda (used MCMC two columns).","code":""},{"path":"https://irsn.github.io/bever/reference/poisGPBayes0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Posterior for a Poisson-GP Model — poisGPBayes0","text":"object class \"GEVBayes0\" inheriting \"Bayes0\". object can used produce RL plots.","code":""},{"path":"https://irsn.github.io/bever/reference/poisGPBayes0.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Posterior for a Poisson-GP Model — poisGPBayes0","text":"Poisson-GP model involves three parameters: one rate lambda Poisson process describing exceedances threshold. two parameters scale shape GP Distribution used excesses threshold. object MCMC can either three columns two columns . second case, column corresponding rate lambda omitted; assumed lambda posteriori independent GP parameters gamma posterior margin. shape posterior distribution \\(a_n := a_0 + n_{\\textrm{OT}}\\) rate \\(b_n := b_0 + w_{\\textrm{OT}}\\), \\(w_{\\textrm{OT}}\\) \\(w_{\\textrm{OT}}\\) number exceedances duration observation period.","code":""},{"path":"https://irsn.github.io/bever/reference/poisGPBayes0.html","id":"caution","dir":"Reference","previous_headings":"","what":"Caution","title":"Create a Posterior for a Poisson-GP Model — poisGPBayes0","text":"user must sure data provided using dedicated arguments consistent MCMC iterates provided MCMC. 'data' dedicated arguments : data, effDuration /MAX.data, MAX.effDuration OTS.data, OTS.threshold, OTS.effDuration. Since attaching data object essentially graphical purpose, can simpler attach data create separated object class \"potData\". object can used autolayer method.","code":""},{"path":[]},{"path":"https://irsn.github.io/bever/reference/poisGPBayes0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Posterior for a Poisson-GP Model — poisGPBayes0","text":"","code":"require(revdbayes) ## ======================================================================== ## use the 'rainfall data': daily rainfalls over 57 years ## ======================================================================== data(rainfall) rainfall2 <- rainfall[!is.na(rainfall)] u <- 40  ## threshold (mm) w <- 57  ## obs duration (year) nOT <- sum(rainfall2 > u) prior <- set_prior(prior = \"flatflat\", model = \"gp\") nSim <- 10000  ## ======================================================================== ## get a posterior for the \"excess part\" of the model ## ======================================================================== postGP <- rpost(n = 10000, model = \"gp\", prior = prior,                 data = rainfall2, thresh = u) MCMCGP <- postGP$sim_vals MAP <- postGP$f_mode names(MAP) <- c(\"scale\", \"shape\")  ## ======================================================================== ## assuming a \"flat gamma prior\" for 'lambda', add MCMC iterates ## for 'lambda' to those existing for GP (new matrix column) ## ======================================================================== MCMCpoisGP <- cbind(lambda = rgamma(nSim, shape = 1 + nOT, rate = 0 + w),                     MCMCGP)  ## ======================================================================== ## create the object ## ======================================================================== post0 <- poisGPBayes0(MCMC = MCMCpoisGP, threshold = u, effDuration = w)  summary(post0) #> poisGP Model Bayesian Inference #> o Number of OT observations: NA #> o Number of MCMC iterates: 10000 #> o Posterior mean [sd]: #>      lambda       scale       shape  #> 1.53 [0.16] 7.99 [1.27] 0.19 [0.13]  coef(post0) #>          lambda    scale     shape #> mean   1.526300 7.987665 0.1947722 #> median 1.522316 7.907451 0.1802754 #> mode         NA       NA        NA  ## ======================================================================== ## 'lambda' and the GP parameters are a posteriori independent ## ======================================================================== cov2cor(vcov(post0)) #>              lambda        scale        shape #> lambda  1.000000000 -0.003300372  0.003631015 #> scale  -0.003300372  1.000000000 -0.593252985 #> shape   0.003631015 -0.593252985  1.000000000  ## ======================================================================== ## create an object assuming 'lambda' independent of the GP param ## ======================================================================== post1 <- poisGPBayes0(MCMC = MCMCGP, threshold = u,                       effDuration = w, nOT = nOT, MAP = MAP)"},{"path":"https://irsn.github.io/bever/reference/predict.GEVBayes0.html","id":null,"dir":"Reference","previous_headings":"","what":"Predictive Quantiles or Return Levels for a GEV Model,\ntypically a Model for Block Maxima — predict.GEVBayes0","title":"Predictive Quantiles or Return Levels for a GEV Model,\ntypically a Model for Block Maxima — predict.GEVBayes0","text":"Compute predictive quantiles return levels GEV Model. quantiles maximum \"new\" period time newDuration years.","code":""},{"path":"https://irsn.github.io/bever/reference/predict.GEVBayes0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predictive Quantiles or Return Levels for a GEV Model,\ntypically a Model for Block Maxima — predict.GEVBayes0","text":"","code":"# S3 method for GEVBayes0 predict(object, newDuration = 1.0, prob,         type = \"RL\",         approx = FALSE,         trace = 0, ...)"},{"path":"https://irsn.github.io/bever/reference/predict.GEVBayes0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predictive Quantiles or Return Levels for a GEV Model,\ntypically a Model for Block Maxima — predict.GEVBayes0","text":"object GEVBayes0 object. newDuration duration 'new' period maximum predicted. newduration expressed using block duration object unit. newDuration = 10 means duration 10 * object$blockDuration. prob vector exceedance probabilities. default value contains \\(0.01\\) 0.001. type type prediction wanted. Remind predict method revdbayes package allows several types prediction. approx Logical. default FALSE, value tail quantile function computed zero-finding. TRUE, quantiles computed using fine pairs (argument, value) distribution function. likely faster approx = FALSE length(prob) large. trace Integer level verbosity. ... used yet.","code":""},{"path":"https://irsn.github.io/bever/reference/predict.GEVBayes0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predictive Quantiles or Return Levels for a GEV Model,\ntypically a Model for Block Maxima — predict.GEVBayes0","text":"data frame three columns NewDuration vector indicating duration predicted period. Prob vector exceedance probabilities. Quant vector quantile return levels. dataframe given S3 class \"predRL\" receives several attributes names factor columns.","code":""},{"path":"https://irsn.github.io/bever/reference/predict.GEVBayes0.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Predictive Quantiles or Return Levels for a GEV Model,\ntypically a Model for Block Maxima — predict.GEVBayes0","text":"duration newDuration understood given years block duration. Thus sould kept constant comparing Block Maxima models different block durations, e.g. one two years.","code":""},{"path":[]},{"path":"https://irsn.github.io/bever/reference/predict.poisGPBayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Predictive Quantiles or Return Levels for a EV Model\nof class ","title":"Predictive Quantiles or Return Levels for a EV Model\nof class ","text":"Prediction Bayesian Extreme-Value model type Poisson-GP.","code":""},{"path":"https://irsn.github.io/bever/reference/predict.poisGPBayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predictive Quantiles or Return Levels for a EV Model\nof class ","text":"","code":"# S3 method for poisGPBayes predict(object, ...)"},{"path":"https://irsn.github.io/bever/reference/predict.poisGPBayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predictive Quantiles or Return Levels for a EV Model\nof class ","text":"object object class \"poisGPBayes\" representing Poisson-GP fitted model Bayesian inference results. ... arguments passed predict.poisGPBayes0.","code":""},{"path":"https://irsn.github.io/bever/reference/predict.poisGPBayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predictive Quantiles or Return Levels for a EV Model\nof class ","text":"object class \"predRL\" inheriting \"data.frame\".","code":""},{"path":"https://irsn.github.io/bever/reference/predict.poisGPBayes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predictive Quantiles or Return Levels for a EV Model\nof class ","text":"method actually call predict.poisGPBayes0. object first coerced \"poisGPBayes0\" simpler class predict method fully implemented.","code":""},{"path":[]},{"path":"https://irsn.github.io/bever/reference/predict.poisGPBayes0.html","id":null,"dir":"Reference","previous_headings":"","what":"Predictive Quantiles or Return Levels for a EV Model\nof type Poisson-GP — predict.poisGPBayes0","title":"Predictive Quantiles or Return Levels for a EV Model\nof type Poisson-GP — predict.poisGPBayes0","text":"Prediction Extreme-Value model type Poisson-GP using MCMC iterates.","code":""},{"path":"https://irsn.github.io/bever/reference/predict.poisGPBayes0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predictive Quantiles or Return Levels for a EV Model\nof type Poisson-GP — predict.poisGPBayes0","text":"","code":"# S3 method for poisGPBayes0 predict(object, newDuration = 1.0, prob,         type = \"RL\",         approx = FALSE,         addLambda = !object$lambdaOut,         trace = 0, ...)"},{"path":"https://irsn.github.io/bever/reference/predict.poisGPBayes0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predictive Quantiles or Return Levels for a EV Model\nof type Poisson-GP — predict.poisGPBayes0","text":"object poisGPBayes0 object, usually created using eponymous creator function poisGPBayes0. newDuration duration 'new' period maximum predicted. prob vector exceedance probabilities. default value contains probabilities 0.01 0.001. type type prediction wanted. Remind predict method revdbayes package uses argument allow several types predictions: density \"d\", quantile \"q\", ... approx Logical. default FALSE, value tail quantile function computed zero-finding. TRUE, quantiles computed using fine pairs (argument, value) distribution function. likely faster approx = FALSE length(prob) large. addLambda Logical. description object 'lambda' idependent GP parameters, exact posterior 'lambda' default used compute predictive distribution. addLambda passed ist value set TRUE, new colum corresponding 'lambda' simply added MCMC iterates computation carried ignoring specific independence property. practice seems make little difference. trace Integer level verbosity. ... used yet.","code":""},{"path":"https://irsn.github.io/bever/reference/predict.poisGPBayes0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predictive Quantiles or Return Levels for a EV Model\nof type Poisson-GP — predict.poisGPBayes0","text":"data frame following columns NewDuration duration \"new\" period maximum predicted. Prob probability exceedance. Quantile return level corresponding probability. dataframe given S3 class \"predRL\" receives several attributes names factor columns.","code":""},{"path":"https://irsn.github.io/bever/reference/predict.poisGPBayes0.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predictive Quantiles or Return Levels for a EV Model\nof type Poisson-GP — predict.poisGPBayes0","text":"rate lambda can omitted MCMC iterates object, reported via logical flag lambdaOut set TRUE among elements object. , parameter lambda assumed posteriori independent GP parameters. case, predictive distribution can computed using predictive distribution number exceedances new period. specific treatement can -passed using addLamba = TRUE; case column MCMC iterates lambda added matrix MCMC iterates GP parameters, see Examples section poisGPBayes0 page.","code":""},{"path":[]},{"path":"https://irsn.github.io/bever/reference/quant2GEV.html","id":null,"dir":"Reference","previous_headings":"","what":"Find GEV Parameters from Given Quantiles — quant2GEV","title":"Find GEV Parameters from Given Quantiles — quant2GEV","text":"Find vector three GEV parameters corresponding vector three quantiles three given distinct probabilities.","code":""},{"path":"https://irsn.github.io/bever/reference/quant2GEV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find GEV Parameters from Given Quantiles — quant2GEV","text":"","code":"quant2GEV(q, p, lower.tail = TRUE, plot = FALSE, eps = 1e-07, trace = 0)"},{"path":"https://irsn.github.io/bever/reference/quant2GEV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find GEV Parameters from Given Quantiles — quant2GEV","text":"q numeric vector length \\(3\\) containing distinct values GEV quantiles. p numeric vector length \\(3\\) containing distinct values probabilities. lower.tail Logical. TRUE values p probability exceedance, else probability non-exceedance. plot Logical. TRUE simple plot illustrate zero-finding used find GEV shape \\(\\xi\\). eps small numeric number used decide shape \\(xi\\) close enough zero. trace Integer level verbosity.","code":""},{"path":"https://irsn.github.io/bever/reference/quant2GEV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find GEV Parameters from Given Quantiles — quant2GEV","text":"named numeric vector containing GEV parameters.","code":""},{"path":"https://irsn.github.io/bever/reference/quant2GEV.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find GEV Parameters from Given Quantiles — quant2GEV","text":"Given three distinct probabilities, one--one correspondance vector three corresponding quantiles vector three GEV parameters vector quantiles can used re-parameterise GEV distribution. quantile parameterisation can preferred define informative priors based expert knowledge, see Coles Tawn.","code":""},{"path":"https://irsn.github.io/bever/reference/quant2GEV.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find GEV Parameters from Given Quantiles — quant2GEV","text":"Coles S. Tawn J. (1996). Bayesian Analysis Extreme Rainfall Data Appl. Statist. 45 (4), pp. 463-478.","code":""},{"path":"https://irsn.github.io/bever/reference/quant2GEV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find GEV Parameters from Given Quantiles — quant2GEV","text":"","code":"co <- quant2GEV(p = c(0.1, 0.01, 0.001),                 q = c(60, 80, 120), lower.tail = FALSE)  ## check the result nieve::qGEV(p = c(0.1, 0.01, 0.001),             loc = co[\"loc\"], scale = co[\"scale\"], shape = co[\"shape\"],             lower.tail = FALSE) #> [1]  60.0000  80.0000 120.0027"},{"path":"https://irsn.github.io/bever/reference/vcov.Bayes0.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance Matrix for a Fitted EV Model — vcov.Bayes0","title":"Covariance Matrix for a Fitted EV Model — vcov.Bayes0","text":"Covariance matrix estimated parameters Bayes0 object.","code":""},{"path":"https://irsn.github.io/bever/reference/vcov.Bayes0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance Matrix for a Fitted EV Model — vcov.Bayes0","text":"","code":"# S3 method for Bayes0 vcov(object, ...)"},{"path":"https://irsn.github.io/bever/reference/vcov.Bayes0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance Matrix for a Fitted EV Model — vcov.Bayes0","text":"object object whith class \"Bayes0\". ... used yet.","code":""},{"path":"https://irsn.github.io/bever/reference/vcov.Bayes0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covariance Matrix for a Fitted EV Model — vcov.Bayes0","text":"covariance matrix, usually size 3.","code":""},{"path":"https://irsn.github.io/bever/reference/vcov.Bayes0.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Covariance Matrix for a Fitted EV Model — vcov.Bayes0","text":"covariance usually computed taking covariance MCMC iterates sored object.","code":""},{"path":[]},{"path":"https://irsn.github.io/bever/news/index.html","id":"changes-0-1-4","dir":"Changelog","previous_headings":"","what":"Changes","title":"Changes in version 0.1.4","text":"Generalized Extreme Value Generalized Pareto Distributions taken nieve package longer imported NSGEV potomax .","code":""}]
